<?xml version="1.0" ?>
<launch>
    <!-- <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="world_name" default="$(find robot_description)/world/lab.world"/> -->

    <!-- Start gazebo and load the world -->
    <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch" >
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="$(arg headless)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="world_name" value="$(arg world_name)"/>
    </include> -->

    <!-- 设置参数 -->
    <!-- <param name="robot_description" textfile="$(find robot_description)/urdf/car.urdf" /> -->
    <!-- <param name="robot_description" command="$(find xacro)/xacro $(find robot_description)/urdf/robot_car.xacro" /> -->

    <!-- 将 Urdf 文件的内容加载到参数服务器 -->
    <arg name = "my_car" default = "$(find robot_description)/urdf/robot_car.xacro" />
    <!-- 将 Urdf 文件的内容加载到参数服务器 -->
    <param name="robot_description" command="$(find xacro)/xacro $(arg my_car)" />

    <!-- 添加关节状态发布节点 -->
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" />

    <!-- 添加机器人状态发布节点 -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>

    <!-- 可选:用于控制关节运动的节点 -->
    <!-- <node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui" /> -->

    <!-- 启动 rviz -->
    <node pkg="rviz" type="rviz" name="rviz" output="screen" />
    <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find robot_description)/config/show_mycar.rviz" /> -->

    <!-- 启动 Velodyne 雷达数据发布 -->
    <arg name="gpu" default="false"/>
    <arg name="organize_cloud" default="false"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find velodyne_description)/urdf/VLP-16.urdf.xacro' gpu:=$(arg gpu)" />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_velodyne" args="-urdf -param /robot_description -model velodyne_model"/>

</launch>
    
